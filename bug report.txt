the bug detected is : 
If the denominator to a division or modulo operation is zero it would result in a fatal error.

When working with double or float, no fatal error will be raised, but it will lead to unusual result and should be avoided anyway.

This rule supports primitive int, long, double, float as well as BigDecimal and BigInteger.

suggested not yet confirmed solution is to make an exception for denominator ==0 . 


the bug code : 

private ClientAnchorDetail calculateColumnLocation(HSSFSheet sheet, int startingColumn, double reqImageWidthMM) {
    	ClientAnchorDetail anchorDetail;
    	double totalWidthMM = 0.0D;
    	double colWidthMM = 0.0D;
    	double overlapMM;
    	double coordinatePositionsPerMM;
    	int toColumn = startingColumn;
    	int inset;
    	while (totalWidthMM < reqImageWidthMM) {
    		colWidthMM = ConvertImageUnits.widthUnits2Millimetres((short)(sheet.getColumnWidth(toColumn)));
    		totalWidthMM += (colWidthMM + ConvertImageUnits.CELL_BORDER_WIDTH_MILLIMETRES);
    		toColumn++;
    	}
    	toColumn--;
    	if((int)totalWidthMM == (int)reqImageWidthMM) {
    		anchorDetail = new ClientAnchorDetail(startingColumn, toColumn, ConvertImageUnits.TOTAL_COLUMN_COORDINATE_POSITIONS);
    	} else {
    		overlapMM = reqImageWidthMM - (totalWidthMM - colWidthMM);
    		if(overlapMM < 0) {
    			overlapMM = 0.0D;
    		}
    		coordinatePositionsPerMM = ConvertImageUnits.TOTAL_COLUMN_COORDINATE_POSITIONS / colWidthMM;
Make sure "colWidthMM" can't be zero before doing this division.
    		inset = (int)(coordinatePositionsPerMM * overlapMM);
    		anchorDetail = new ClientAnchorDetail(startingColumn, toColumn, inset);
    	}
    	return(anchorDetail);
    }
    
    private ClientAnchorDetail fitImageToRows(HSSFSheet sheet, int rowNumber, double reqImageHeightMM, int resizeBehaviour) {
        double rowCoordinatesPerMM;
        int pictureHeightCoordinates; 